name: Build Simple

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, macos-13, macos-14]
        build_type: [Release]
        include:
          - os: windows-latest
            cpp_compiler: g++
            shell: pwsh
          - os: ubuntu-latest
            cpp_compiler: g++
            shell: bash
          - os: ubuntu-latest
            cpp_compiler: clang++
            shell: bash
          - os: macos-latest
            cpp_compiler: clang++
            shell: bash
          - os: macos-13
            cpp_compiler: clang++
            shell: bash
          - os: macos-14
            cpp_compiler: clang++
            shell: bash

    steps:
    - uses: actions/checkout@v4

    # Install MinGW and g++ on Windows
    - name: Install MinGW (g++ for Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install mingw
        echo "C:/ProgramData/chocolatey/lib/mingw/tools/install/mingw64/bin" >> $GITHUB_PATH

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: |
        cmake -B ${{ steps.strings.outputs.build-output-dir }} \
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
        -S ${{ github.workspace }}
      env:
        CXX: ${{ matrix.cpp_compiler }}

    - name: Configure CMake (Windows with g++)
      if: matrix.os == 'windows-latest'
      run: |
        cmake -B ${{ steps.strings.outputs.build-output-dir }} -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -S ${{ github.workspace }}
      env:
        CXX: ${{ matrix.cpp_compiler }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}